# Diagnostic Commands - Run these directly in PowerShell

# 1. Check if MidsReborn.dll was built
Write-Host "=== Checking for MidsReborn.dll ===" -ForegroundColor Cyan
Get-ChildItem -Path "C:\Users\Public\Documents\MidsExport\mids-hero-web\external\MidsReborn" -Filter "MidsReborn.dll" -Recurse | Select-Object FullName, Length

# 2. Check DataExporter output directory
Write-Host "`n=== Checking DataExporter output ===" -ForegroundColor Cyan
Get-ChildItem -Path "C:\Users\Public\Documents\MidsExport\mids-hero-web\DataExporter\bin" -Filter "*.dll" -Recurse | Select-Object FullName, Name

# 3. Check if project reference is working
Write-Host "`n=== Checking project dependencies ===" -ForegroundColor Cyan
cd C:\Users\Public\Documents\MidsExport\mids-hero-web\DataExporter
dotnet list reference

# 4. Quick fix - manually copy the DLLs
Write-Host "`n=== Manual DLL Copy (Quick Fix) ===" -ForegroundColor Cyan
$source = "C:\Users\Public\Documents\MidsExport\mids-hero-web\external\MidsReborn\MidsReborn\bin\Debug"
$target = "C:\Users\Public\Documents\MidsExport\mids-hero-web\DataExporter\bin\Debug"

# Find the exact paths
$sourceDll = Get-ChildItem -Path $source -Filter "MidsReborn.dll" -Recurse | Select-Object -First 1
$targetDir = Get-ChildItem -Path $target -Directory | Select-Object -First 1

if ($sourceDll -and $targetDir) {
    Write-Host "Copying from: $($sourceDll.FullName)" -ForegroundColor Yellow
    Write-Host "Copying to: $($targetDir.FullName)" -ForegroundColor Yellow
    
    # Copy all DLLs from MidsReborn output to DataExporter output
    Copy-Item "$($sourceDll.Directory.FullName)\*.dll" -Destination $targetDir.FullName -Force
    Write-Host "DLLs copied!" -ForegroundColor Green
} else {
    Write-Host "Could not find source or target directories" -ForegroundColor Red
    Write-Host "Source DLL: $sourceDll"
    Write-Host "Target Dir: $targetDir"
}