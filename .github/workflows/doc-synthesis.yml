name: Documentation Synthesis

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
  push:
    branches: [main, develop, test/*]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  analyze-changes:
    runs-on: ubuntu-latest
    outputs:
      needs_doc_update: ${{ steps.check.outputs.needs_update }}
      changed_files: ${{ steps.check.outputs.files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            backend/**/*.py
            frontend/**/*.{js,ts,jsx,tsx}
            **/*.md
            backend/pyproject.toml
            frontend/package.json
            docker-compose.yml
            Dockerfile
            justfile
            .claude/**/*.md
            
      - name: Check if docs need update
        id: check
        run: |
          if [[ "${{ steps.changed-files.outputs.any_changed }}" == "true" ]]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "files=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

  synthesize-docs:
    needs: analyze-changes
    if: needs.analyze-changes.outputs.needs_doc_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install anthropic pyyaml tiktoken
          
      - name: Create documentation analysis script
        run: |
          cat << 'EOF' > analyze_docs.py
          import os
          import anthropic
          from pathlib import Path
          
          client = anthropic.Anthropic()
          
          # Read changed files
          changed_files_str = os.environ.get('CHANGED_FILES', '')
          if not changed_files_str.strip():
              print("No changed files found")
              exit(0)
              
          changed_files = changed_files_str.split()
          print(f"Processing {len(changed_files)} changed files")
          
          # Read current CLAUDE.md for context
          claude_md = ''
          try:
              with open('CLAUDE.md', 'r') as f:
                  claude_md = f.read()
              print("Loaded CLAUDE.md for context")
          except Exception as e:
              print(f"Could not load CLAUDE.md: {e}")
              pass
          
          # Analyze changes and suggest doc updates
          file_contents = {}
          for file_path in changed_files[:10]:  # Limit to first 10 files
              try:
                  with open(file_path, 'r', encoding='utf-8') as f:
                      content = f.read()[:2000]  # First 2k chars
                      file_contents[file_path] = content
                  print(f"Loaded content from {file_path}")
              except Exception as e:
                  print(f"Could not read {file_path}: {e}")
                  pass
          
          if not file_contents:
              print("No file contents could be read")
              exit(0)
              
          print(f"Analyzing {len(file_contents)} files for documentation updates")
          
          changed_files_text = '\n'.join([f"{path}:\n{content[:500]}..." for path, content in file_contents.items()])
          
          prompt = f"""Analyze these code changes for the Mids Hero Web project and suggest documentation updates.

Current CLAUDE.md (first 3000 chars):
{claude_md[:3000]}

Changed Files:
{changed_files_text}

Please suggest:
1. Updates needed for README.md (if API changes, new features, setup changes)
2. Updates needed for CLAUDE.md (if workflow changes, new commands, context changes)
3. Updates needed for .claude/epics/ files (if epic progress changes)
4. New documentation needed (if new major features)

Focus on:
- API endpoint changes (update API documentation)
- New just commands (update quick-commands.md)
- Database model changes (update database-design.md)
- New Epic progress (update epic status)
- Docker/deployment changes (update setup instructions)

Provide specific suggestions in markdown format:"""
          
          try:
              response = client.messages.create(
                  model='claude-3-5-sonnet-20241022',
                  max_tokens=2000,
                  messages=[{'role': 'user', 'content': prompt}]
              )
              
              suggestions = response.content[0].text
              print("Generated documentation suggestions")
              
              with open('doc_suggestions.md', 'w', encoding='utf-8') as f:
                  f.write(suggestions)
              print("Saved suggestions to doc_suggestions.md")
              
          except Exception as e:
              print(f"Error calling Anthropic API: {e}")
              # Create a basic fallback suggestion
              with open('doc_suggestions.md', 'w', encoding='utf-8') as f:
                  f.write(f"## Documentation Review Needed\n\nThe following files were changed and may need documentation updates:\n\n")
                  for path in file_contents.keys():
                      f.write(f"- {path}\n")
                  f.write(f"\nPlease review these changes and update documentation as needed.\n")
              print("Created fallback suggestions")
          EOF
          
      - name: Run documentation analysis
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CHANGED_FILES: ${{ needs.analyze-changes.outputs.changed_files }}
        run: |
          python analyze_docs.py
          
      - name: Check if documentation updates are needed
        id: doc-check
        run: |
          if [ -f "doc_suggestions.md" ] && [ -s "doc_suggestions.md" ]; then
            echo "has_suggestions=true" >> $GITHUB_OUTPUT
          else
            echo "has_suggestions=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create documentation PR comment
        if: steps.doc-check.outputs.has_suggestions == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const suggestions = fs.readFileSync('doc_suggestions.md', 'utf8');
            
            const comment = `## ðŸ“š Documentation Update Suggestions

The following code changes may require documentation updates:

${suggestions}

### Action Items:
- [ ] Review suggested documentation updates
- [ ] Update relevant documentation files
- [ ] Ensure CLAUDE.md stays under 5k tokens
- [ ] Update epic progress if applicable

---
*Generated by automated documentation analysis*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
            
      - name: Output suggestions for push events
        if: steps.doc-check.outputs.has_suggestions == 'true' && github.event_name == 'push'
        run: |
          echo "## ðŸ“š Documentation Update Suggestions for Push Event" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat doc_suggestions.md >> $GITHUB_STEP_SUMMARY