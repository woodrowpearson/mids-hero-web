"""add_json_data_models_and_fields

Revision ID: ebb093a41e89
Revises: 4b9678b90f10
Create Date: 2025-07-19 02:37:52.005712

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ebb093a41e89"
down_revision: str | Sequence[str] | None = "4b9678b90f10"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "salvage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("internal_name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=False),
        sa.Column("salvage_type", sa.String(length=50), nullable=True),
        sa.Column("origin", sa.String(length=50), nullable=True),
        sa.Column("level_range", sa.String(length=20), nullable=True),
        sa.Column("icon_path", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_salvage_type", "salvage", ["salvage_type", "origin"], unique=False
    )
    op.create_index(op.f("ix_salvage_id"), "salvage", ["id"], unique=False)
    op.create_index(
        op.f("ix_salvage_internal_name"), "salvage", ["internal_name"], unique=True
    )
    op.create_table(
        "type_grades",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("archetype_id", sa.Integer(), nullable=True),
        sa.Column("attribute_name", sa.String(length=100), nullable=False),
        sa.Column("grade_type", sa.String(length=50), nullable=True),
        sa.Column("modifier_value", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("level_scaling", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["archetype_id"],
            ["archetypes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "archetype_id", "attribute_name", "grade_type", name="uq_type_grade"
        ),
    )
    op.create_index(
        "idx_type_grade_archetype", "type_grades", ["archetype_id"], unique=False
    )
    op.create_index(
        "idx_type_grade_attribute", "type_grades", ["attribute_name"], unique=False
    )
    op.create_index(op.f("ix_type_grades_id"), "type_grades", ["id"], unique=False)
    op.create_table(
        "attribute_modifiers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("power_id", sa.Integer(), nullable=True),
        sa.Column("enhancement_id", sa.Integer(), nullable=True),
        sa.Column("attribute_name", sa.String(length=100), nullable=False),
        sa.Column("attribute_type", sa.String(length=50), nullable=True),
        sa.Column("modifier_table", sa.String(length=100), nullable=True),
        sa.Column("scale", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("aspect", sa.String(length=50), nullable=True),
        sa.Column("application_type", sa.String(length=50), nullable=True),
        sa.Column("target_type", sa.String(length=50), nullable=True),
        sa.Column("effect_area", sa.String(length=50), nullable=True),
        sa.Column("flags", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["enhancement_id"],
            ["enhancements.id"],
        ),
        sa.ForeignKeyConstraint(
            ["power_id"],
            ["powers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_attribmod_attribute",
        "attribute_modifiers",
        ["attribute_name"],
        unique=False,
    )
    op.create_index(
        "idx_attribmod_enhancement",
        "attribute_modifiers",
        ["enhancement_id"],
        unique=False,
    )
    op.create_index(
        "idx_attribmod_power", "attribute_modifiers", ["power_id"], unique=False
    )
    op.create_index(
        op.f("ix_attribute_modifiers_attribute_name"),
        "attribute_modifiers",
        ["attribute_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_attribute_modifiers_id"), "attribute_modifiers", ["id"], unique=False
    )
    op.create_table(
        "recipes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("internal_name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=False),
        sa.Column("enhancement_id", sa.Integer(), nullable=True),
        sa.Column("recipe_type", sa.String(length=50), nullable=True),
        sa.Column("level_min", sa.Integer(), nullable=True),
        sa.Column("level_max", sa.Integer(), nullable=True),
        sa.Column("crafting_cost", sa.Integer(), nullable=True),
        sa.Column("crafting_cost_premium", sa.Integer(), nullable=True),
        sa.Column("memorized", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["enhancement_id"],
            ["enhancements.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_recipe_level", "recipes", ["level_min", "level_max"], unique=False
    )
    op.create_index(op.f("ix_recipes_id"), "recipes", ["id"], unique=False)
    op.create_index(
        op.f("ix_recipes_internal_name"), "recipes", ["internal_name"], unique=True
    )
    op.create_table(
        "recipe_salvage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("recipe_id", sa.Integer(), nullable=False),
        sa.Column("salvage_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["salvage_id"],
            ["salvage.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("recipe_id", "salvage_id", name="uq_recipe_salvage"),
    )
    op.create_index(
        "idx_recipe_salvage_recipe", "recipe_salvage", ["recipe_id"], unique=False
    )
    op.create_index(
        "idx_recipe_salvage_salvage", "recipe_salvage", ["salvage_id"], unique=False
    )
    op.create_index(
        op.f("ix_recipe_salvage_id"), "recipe_salvage", ["id"], unique=False
    )
    op.add_column(
        "archetypes", sa.Column("icon_path", sa.String(length=255), nullable=True)
    )
    op.add_column(
        "enhancements", sa.Column("short_name", sa.String(length=50), nullable=True)
    )
    op.add_column("enhancements", sa.Column("description", sa.Text(), nullable=True))
    op.add_column(
        "enhancements", sa.Column("recipe_name", sa.String(length=100), nullable=True)
    )
    op.add_column(
        "enhancements", sa.Column("salvage_name", sa.String(length=100), nullable=True)
    )
    op.alter_column(
        "enhancements",
        "display_name",
        existing_type=sa.VARCHAR(length=100),
        type_=sa.String(length=200),
        existing_nullable=True,
    )
    op.add_column(
        "powers", sa.Column("internal_name", sa.String(length=100), nullable=True)
    )
    op.add_column(
        "powers", sa.Column("requires_line_of_sight", sa.Boolean(), nullable=True)
    )
    op.add_column("powers", sa.Column("modes_required", sa.JSON(), nullable=True))
    op.add_column("powers", sa.Column("modes_disallowed", sa.JSON(), nullable=True))
    op.add_column("powers", sa.Column("ai_report", sa.String(length=50), nullable=True))
    op.add_column("powers", sa.Column("effect_groups", sa.JSON(), nullable=True))
    op.add_column("powers", sa.Column("display_info", sa.JSON(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("powers", "display_info")
    op.drop_column("powers", "effect_groups")
    op.drop_column("powers", "ai_report")
    op.drop_column("powers", "modes_disallowed")
    op.drop_column("powers", "modes_required")
    op.drop_column("powers", "requires_line_of_sight")
    op.drop_column("powers", "internal_name")
    op.alter_column(
        "enhancements",
        "display_name",
        existing_type=sa.String(length=200),
        type_=sa.VARCHAR(length=100),
        existing_nullable=True,
    )
    op.drop_column("enhancements", "salvage_name")
    op.drop_column("enhancements", "recipe_name")
    op.drop_column("enhancements", "description")
    op.drop_column("enhancements", "short_name")
    op.drop_column("archetypes", "icon_path")
    op.drop_index(op.f("ix_recipe_salvage_id"), table_name="recipe_salvage")
    op.drop_index("idx_recipe_salvage_salvage", table_name="recipe_salvage")
    op.drop_index("idx_recipe_salvage_recipe", table_name="recipe_salvage")
    op.drop_table("recipe_salvage")
    op.drop_index(op.f("ix_recipes_internal_name"), table_name="recipes")
    op.drop_index(op.f("ix_recipes_id"), table_name="recipes")
    op.drop_index("idx_recipe_level", table_name="recipes")
    op.drop_table("recipes")
    op.drop_index(op.f("ix_attribute_modifiers_id"), table_name="attribute_modifiers")
    op.drop_index(
        op.f("ix_attribute_modifiers_attribute_name"), table_name="attribute_modifiers"
    )
    op.drop_index("idx_attribmod_power", table_name="attribute_modifiers")
    op.drop_index("idx_attribmod_enhancement", table_name="attribute_modifiers")
    op.drop_index("idx_attribmod_attribute", table_name="attribute_modifiers")
    op.drop_table("attribute_modifiers")
    op.drop_index(op.f("ix_type_grades_id"), table_name="type_grades")
    op.drop_index("idx_type_grade_attribute", table_name="type_grades")
    op.drop_index("idx_type_grade_archetype", table_name="type_grades")
    op.drop_table("type_grades")
    op.drop_index(op.f("ix_salvage_internal_name"), table_name="salvage")
    op.drop_index(op.f("ix_salvage_id"), table_name="salvage")
    op.drop_index("idx_salvage_type", table_name="salvage")
    op.drop_table("salvage")
    # ### end Alembic commands ###
