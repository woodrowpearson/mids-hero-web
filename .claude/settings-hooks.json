{
  "hooks": {
    "UserPromptSubmit": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 .claude/hooks/context-validator.py",
            "timeout_seconds": 10,
            "run_in_background": true
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 .claude/hooks/token-limiter.py",
            "timeout_seconds": 5
          },
          {
            "type": "command",
            "command": "python3 .claude/hooks/activity-logger.py",
            "run_in_background": true
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "python3 .claude/hooks/activity-logger.py",
            "run_in_background": true
          }
        ]
      },
      {
        "matcher": "Read",
        "hooks": [
          {
            "type": "command",
            "command": "python3 .claude/hooks/activity-logger.py",
            "run_in_background": true
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"$(date '+%Y-%m-%d %H:%M:%S') File modified: $CLAUDE_FILE_PATHS\" >> .claude/state/logs/file-changes.log",
            "run_in_background": true
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 -c \"import json; from pathlib import Path; stats_file = Path('.claude/state/session-stats.json'); stats = json.loads(stats_file.read_text()) if stats_file.exists() else {}; print(f\\\"Session summary: {stats.get('tool_usage', {})} tools used, {stats.get('files_modified', 0)} files modified, {stats.get('commands_run', 0)} commands run\\\")\"",
            "timeout_seconds": 5,
            "run_in_background": true
          }
        ]
      }
    ]
  }
}