name: Claude Code Integration

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  claude-response:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '@claude')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Extract Claude question
        id: extract
        run: |
          USER_COMMENT="${{ github.event.comment.body }}"
          # Remove @claude mention and get actual question
          QUESTION=$(echo "$USER_COMMENT" | sed 's/@claude//' | sed 's/^[[:space:]]*//')
          echo "question=$QUESTION" >> $GITHUB_OUTPUT
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Claude Code Response
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run custom Claude integration
          bash .github/scripts/claude_wrapper.sh \
            --prompt "You are responding to a question in PR #${{ github.event.issue.number }} of the Mids Hero Web project.
            
            User: ${{ github.event.comment.user.login }}
            User question: ${{ steps.extract.outputs.question }}
            
            Provide a helpful response about the codebase, epic progress, or City of Heroes mechanics as requested.
            Keep your response concise and relevant to the question.
            
            Context:
            - This is a City of Heroes build planner replacement project
            - We're replacing the legacy Windows Forms app with React/FastAPI
            - Currently on Epic 2.5.2 (Native Sub-Agents Implementation)
            - Focus on accurate game mechanics and domain knowledge" \
            --timeout 10 \
            --pr ${{ github.event.issue.number }} \
            --post-comment

  claude-doc-automation:
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'implement doc suggestions')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.issue.pull_request.head.ref }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Implement Documentation Suggestions
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # For now, just acknowledge the request
          echo "Documentation implementation requested by ${{ github.event.comment.user.login }}"
          echo "Comment: ${{ github.event.comment.body }}"
          
          # Run Claude to analyze what needs to be done
          bash .github/scripts/claude_wrapper.sh \
            --prompt "Documentation update requested for PR #${{ github.event.issue.number }}.
            
            User comment: '${{ github.event.comment.body }}'
            
            Please analyze what documentation updates are needed and provide a summary of the changes that would be made.
            Focus on:
            - Epic status updates
            - Token limit compliance for CLAUDE.md
            - Documentation accuracy
            
            Note: Actual file modifications are not yet implemented in this workflow.
            Provide a clear summary of what would need to be updated." \
            --timeout 15 \
            --pr ${{ github.event.issue.number }} \
            --post-comment

  approval-processor:
    if: github.event.issue.pull_request && (contains(github.event.comment.body, 'approved') || contains(github.event.comment.body, 'approve') || contains(github.event.comment.body, 'implement this') || contains(github.event.comment.body, 'apply this') || contains(github.event.comment.body, 'âœ…') || contains(github.event.comment.body, 'yes, apply') || contains(github.event.comment.body, 'go ahead'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.issue.pull_request.head.ref }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Process Approval and Apply Changes
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Acknowledge the approval
          echo "Approval detected from ${{ github.event.comment.user.login }}"
          echo "Comment: ${{ github.event.comment.body }}"
          
          # Run Claude to analyze the approval
          bash .github/scripts/claude_wrapper.sh \
            --prompt "Approval comment detected in PR #${{ github.event.issue.number }}.
            
            User: ${{ github.event.comment.user.login }}
            Approval comment: '${{ github.event.comment.body }}'
            
            Please analyze this approval and determine:
            1. Is this a simple approval or approval with modifications?
            2. What specific changes are being approved?
            3. Are there any additional modifications requested?
            
            Common approval patterns:
            - 'approved' or 'approve' - Simple approval
            - 'approved with X' - Approval with specific modifications
            - 'implement this' - Apply suggested changes
            
            Note: Actual file modifications are not yet implemented in this workflow.
            Provide a clear summary of what the approval means and what would be done." \
            --timeout 20 \
            --pr ${{ github.event.issue.number }} \
            --post-comment