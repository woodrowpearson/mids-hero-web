name: Claude Code Integration

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  claude-response:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '@claude')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Extract Claude question
        id: extract
        run: |
          USER_COMMENT="${{ github.event.comment.body }}"
          # Remove @claude mention and get actual question
          QUESTION=$(echo "$USER_COMMENT" | sed 's/@claude//' | sed 's/^[[:space:]]*//')
          echo "question=$QUESTION" >> $GITHUB_OUTPUT
          
      - name: Claude Code Response
        uses: anthropics/claude-code-action@v1.2.0
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "10"
          direct_prompt: |
            You are responding to a question in PR #${{ github.event.issue.number }} of the Mids Hero Web project.
            
            User question: ${{ steps.extract.outputs.question }}
            
            Provide a helpful response about the codebase, epic progress, or City of Heroes mechanics as requested.
            Keep your response concise and relevant to the question.

  claude-doc-automation:
    if: github.event.issue.pull_request && contains(github.event.comment.body, 'implement doc suggestions')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.issue.pull_request.head.ref }}
          
      - name: Implement Documentation Suggestions
        uses: anthropics/claude-code-action@v1.2.0
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "15"
          direct_prompt: |
            This is an automated task to implement documentation suggestions for PR #${{ github.event.issue.number }}.
            
            1. Search for recent documentation suggestions in PR comments from github-actions bot
            2. Apply the suggested documentation updates to the appropriate files
            3. Ensure CLAUDE.md stays under 5K tokens
            4. Commit any changes with appropriate message
            
            Focus on:
            - Epic status updates in CLAUDE.md
            - Token limit compliance
            - Documentation accuracy
            
            The user comment was: "${{ github.event.comment.body }}"

  approval-processor:
    if: github.event.issue.pull_request && (contains(github.event.comment.body, 'approved') || contains(github.event.comment.body, 'approve') || contains(github.event.comment.body, 'implement this') || contains(github.event.comment.body, 'apply this') || contains(github.event.comment.body, 'âœ…') || contains(github.event.comment.body, 'yes, apply') || contains(github.event.comment.body, 'go ahead'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.issue.pull_request.head.ref }}
          
      - name: Process Approval and Apply Changes
        uses: anthropics/claude-code-action@v1.2.0
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: "20"
          direct_prompt: |
            This is an automated task to process approval comments and apply approved changes for PR #${{ github.event.issue.number }}.
            
            User approval comment: "${{ github.event.comment.body }}"
            
            Tasks:
            1. Find recent documentation suggestions from github-actions bot in this PR
            2. Determine if this is a simple approval or approval with modifications
            3. Apply the approved changes based on the approval type
            4. For modified approvals, parse and apply the requested modifications
            5. Commit changes with appropriate message
            
            Common modifications to handle:
            - Docker commands addition
            - Epic 2 details updates
            - API documentation sections
            - Quick commands documentation
            
            Ensure all changes are properly committed and pushed.