name: Reusable PR Context

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: false
        type: number
        default: 0
      fetch_diff:
        description: 'Fetch PR diff content'
        required: false
        type: boolean
        default: true
      fetch_comments:
        description: 'Fetch PR comments'
        required: false
        type: boolean
        default: false
      fetch_commits:
        description: 'Fetch PR commits'
        required: false
        type: boolean
        default: false
    
    secrets:
      github_token:
        description: 'GitHub token'
        required: true
    
    outputs:
      pr_title:
        description: 'PR title'
        value: ${{ jobs.extract-context.outputs.pr_title }}
      pr_body:
        description: 'PR description'
        value: ${{ jobs.extract-context.outputs.pr_body }}
      pr_author:
        description: 'PR author'
        value: ${{ jobs.extract-context.outputs.pr_author }}
      pr_labels:
        description: 'PR labels (comma-separated)'
        value: ${{ jobs.extract-context.outputs.pr_labels }}
      pr_state:
        description: 'PR state (open/closed/merged)'
        value: ${{ jobs.extract-context.outputs.pr_state }}
      pr_url:
        description: 'PR URL'
        value: ${{ jobs.extract-context.outputs.pr_url }}
      pr_diff:
        description: 'PR diff content'
        value: ${{ jobs.extract-context.outputs.pr_diff }}
      pr_comments:
        description: 'PR comments (JSON)'
        value: ${{ jobs.extract-context.outputs.pr_comments }}
      pr_commits:
        description: 'PR commits (JSON)'
        value: ${{ jobs.extract-context.outputs.pr_commits }}
      pr_size:
        description: 'PR size classification'
        value: ${{ jobs.extract-context.outputs.pr_size }}
      files_changed:
        description: 'Number of files changed'
        value: ${{ jobs.extract-context.outputs.files_changed }}
      additions:
        description: 'Number of lines added'
        value: ${{ jobs.extract-context.outputs.additions }}
      deletions:
        description: 'Number of lines deleted'
        value: ${{ jobs.extract-context.outputs.deletions }}
      context_summary:
        description: 'Formatted context summary'
        value: ${{ jobs.extract-context.outputs.context_summary }}

jobs:
  extract-context:
    name: Extract PR Context
    runs-on: ubuntu-latest
    outputs:
      pr_title: ${{ steps.pr-data.outputs.title }}
      pr_body: ${{ steps.pr-data.outputs.body }}
      pr_author: ${{ steps.pr-data.outputs.author }}
      pr_labels: ${{ steps.pr-data.outputs.labels }}
      pr_state: ${{ steps.pr-data.outputs.state }}
      pr_url: ${{ steps.pr-data.outputs.url }}
      pr_diff: ${{ steps.diff.outputs.content }}
      pr_comments: ${{ steps.comments.outputs.content }}
      pr_commits: ${{ steps.commits.outputs.content }}
      pr_size: ${{ steps.analyze.outputs.size }}
      files_changed: ${{ steps.pr-data.outputs.files_changed }}
      additions: ${{ steps.pr-data.outputs.additions }}
      deletions: ${{ steps.pr-data.outputs.deletions }}
      context_summary: ${{ steps.summary.outputs.content }}
    
    steps:
      - name: Determine PR number
        id: pr-number
        run: |
          PR_NUMBER="${{ inputs.pr_number }}"
          
          # Auto-detect PR number if not provided
          if [[ "$PR_NUMBER" == "0" ]]; then
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              PR_NUMBER="${{ github.event.pull_request.number }}"
            elif [[ "${{ github.event_name }}" == "issue_comment" ]] && [[ "${{ github.event.issue.pull_request }}" != "" ]]; then
              PR_NUMBER="${{ github.event.issue.number }}"
            fi
          fi
          
          if [[ "$PR_NUMBER" == "0" ]]; then
            echo "❌ Could not determine PR number" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Using PR #$PR_NUMBER" >> $GITHUB_STEP_SUMMARY
      
      - name: Fetch PR data
        id: pr-data
        run: |
          PR_NUMBER="${{ steps.pr-number.outputs.pr_number }}"
          
          # Fetch PR metadata
          PR_DATA=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER)
          
          # Extract fields
          TITLE=$(echo "$PR_DATA" | jq -r '.title')
          BODY=$(echo "$PR_DATA" | jq -r '.body // ""')
          AUTHOR=$(echo "$PR_DATA" | jq -r '.user.login')
          STATE=$(echo "$PR_DATA" | jq -r '.state')
          URL=$(echo "$PR_DATA" | jq -r '.html_url')
          FILES_CHANGED=$(echo "$PR_DATA" | jq -r '.changed_files // 0')
          ADDITIONS=$(echo "$PR_DATA" | jq -r '.additions // 0')
          DELETIONS=$(echo "$PR_DATA" | jq -r '.deletions // 0')
          
          # Extract labels
          LABELS=$(echo "$PR_DATA" | jq -r '.labels[].name' | paste -sd ',' -)
          
          # Save outputs
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT
          echo "labels=$LABELS" >> $GITHUB_OUTPUT
          echo "state=$STATE" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "additions=$ADDITIONS" >> $GITHUB_OUTPUT
          echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.github_token }}
      
      - name: Fetch PR diff
        id: diff
        if: inputs.fetch_diff
        run: |
          PR_NUMBER="${{ steps.pr-number.outputs.pr_number }}"
          
          # Fetch diff (limit to reasonable size)
          DIFF=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER --header "Accept: application/vnd.github.diff" | head -c 50000)
          
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF" >> $GITHUB_OUTPUT
          if [[ ${#DIFF} -ge 50000 ]]; then
            echo "... (diff truncated)" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.github_token }}
      
      - name: Fetch PR comments
        id: comments
        if: inputs.fetch_comments
        run: |
          PR_NUMBER="${{ steps.pr-number.outputs.pr_number }}"
          
          # Fetch comments
          COMMENTS=$(gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments --jq '[.[] | {author: .user.login, body: .body, created_at: .created_at}]')
          
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMENTS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.github_token }}
      
      - name: Fetch PR commits
        id: commits
        if: inputs.fetch_commits
        run: |
          PR_NUMBER="${{ steps.pr-number.outputs.pr_number }}"
          
          # Fetch commits
          COMMITS=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER/commits --jq '[.[] | {sha: .sha, author: .commit.author.name, message: .commit.message}]')
          
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.github_token }}
      
      - name: Analyze PR size
        id: analyze
        run: |
          FILES="${{ steps.pr-data.outputs.files_changed }}"
          ADDITIONS="${{ steps.pr-data.outputs.additions }}"
          DELETIONS="${{ steps.pr-data.outputs.deletions }}"
          
          # Classify PR size
          SIZE="small"
          if [[ $FILES -gt 10 ]] || [[ $ADDITIONS -gt 500 ]]; then
            SIZE="medium"
          fi
          if [[ $FILES -gt 50 ]] || [[ $ADDITIONS -gt 2000 ]]; then
            SIZE="large"
          fi
          
          echo "size=$SIZE" >> $GITHUB_OUTPUT
      
      - name: Generate context summary
        id: summary
        run: |
          cat > summary.md << EOF
          ## Pull Request Context
          
          **PR:** #${{ steps.pr-number.outputs.pr_number }} - ${{ steps.pr-data.outputs.title }}
          **Author:** @${{ steps.pr-data.outputs.author }}
          **State:** ${{ steps.pr-data.outputs.state }}
          **Size:** ${{ steps.analyze.outputs.size }}
          **Changes:** ${{ steps.pr-data.outputs.files_changed }} files (+${{ steps.pr-data.outputs.additions }}/-${{ steps.pr-data.outputs.deletions }})
          **Labels:** ${{ steps.pr-data.outputs.labels }}
          **URL:** ${{ steps.pr-data.outputs.url }}
          
          ### Description
          ${{ steps.pr-data.outputs.body }}
          EOF
          
          echo "content<<EOF" >> $GITHUB_OUTPUT
          cat summary.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Also add to step summary
          cat summary.md >> $GITHUB_STEP_SUMMARY