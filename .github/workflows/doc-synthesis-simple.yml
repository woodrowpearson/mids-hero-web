name: Documentation Synthesis (Simple)

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  doc-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.py
            **/*.md
            backend/pyproject.toml
            frontend/package.json
            docker-compose.yml
            Dockerfile
            justfile
            .claude/**/*.md
            
      - name: Set up Python
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        run: pip install anthropic
        
      - name: Analyze changes and create suggestions
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          python << 'EOF'
          import os
          import anthropic
          
          client = anthropic.Anthropic()
          
          changed_files = "${{ steps.changed-files.outputs.all_changed_files }}".split()
          print(f"Analyzing {len(changed_files)} changed files...")
          
          # Simple analysis for documentation
          suggestions = []
          
          for file_path in changed_files[:5]:  # Limit to 5 files
              try:
                  with open(file_path, 'r') as f:
                      content = f.read()[:1000]  # First 1k chars
                  
                  if file_path == 'README.md':
                      suggestions.append("✅ README.md updated - consider updating CLAUDE.md Epic status")
                  elif file_path.endswith('.py'):
                      if 'def ' in content or 'class ' in content:
                          suggestions.append(f"🐍 {file_path} has new functions/classes - check if API docs need updating")
                  elif file_path == 'justfile':
                      suggestions.append("⚡ justfile updated - check if .claude/quick-commands.md needs updating")
                  elif file_path.endswith('.yml') and 'workflows' in file_path:
                      suggestions.append(f"🤖 Workflow {file_path} updated - consider documenting in CLAUDE.md")
                      
              except Exception as e:
                  print(f"Could not read {file_path}: {e}")
          
          if suggestions:
              with open('suggestions.md', 'w') as f:
                  f.write("## 📚 Documentation Update Suggestions\n\n")
                  for suggestion in suggestions:
                      f.write(f"- {suggestion}\n")
                  f.write("\n### Recommended Actions:\n")
                  f.write("- [ ] Review the suggested updates above\n")
                  f.write("- [ ] Update Epic progress in .claude/progress.json if applicable\n")
                  f.write("- [ ] Ensure CLAUDE.md stays under 5k tokens\n")
              print(f"Created {len(suggestions)} suggestions")
          else:
              print("No documentation suggestions needed")
          EOF
          
      - name: Comment on PR
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const suggestions = fs.readFileSync('suggestions.md', 'utf8');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: suggestions + '\n\n---\n*Generated by simplified documentation analysis*'
              });
              
              console.log('Posted documentation suggestions to PR');
            } catch (error) {
              console.log('No suggestions file found or error posting comment:', error.message);
            }